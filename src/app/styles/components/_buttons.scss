@use "../utils/variables";
@use "../utils/functions";

.button-high-priority.button-high-priority--inversed-colors {
  background-color: variables.$main-foreground;
  color: variables.$main-background;
  border-color: variables.$main-background;

  &::after {
    background-color: variables.$main-background;
  }
}

.button-high-priority {
  background-color: transparent;
  border: functions.toRem(2px) solid variables.$main-foreground-light;
  padding: functions.toRem(10px) functions.toRem(15px);
  color: variables.$main-foreground-light;
  display: flex;
  width: fit-content;
  gap: functions.toRem(20px);
  font-family: variables.$main-font;
  font-weight: variables.$f-weight-regular;
  font-size: functions.toRem(16px);
  line-height: functions.toRem(24px);
  text-decoration: none;
  position: relative;
  align-items: flex-end;
  cursor: pointer;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
    width: 100%;
    height: 100%;
    border: 2px solid black;
    transition: 150ms ease;
    transition-property: width, height;
  }

  &:hover {
    &::after {
      width: calc(100% - 10px);
      height: calc(100% - 10px);  
    }
  }

  &:active {
    &::after {
      width: calc(100% - 15px);
      height: calc(100% - 15px);  
    }
  }

  &--disabled {
    opacity: .5;
    pointer-events: none;
  }

  @media (max-width: variables.$breakpoint-m-minus-1) {
    font-size: functions.toRem(14px);
    padding: functions.toRem(8px) functions.toRem(16px);
  }

  @media (pointer: fine) {
    &:hover {
      color: variables.$main-background;
      border-color: variables.$main-background;
    }
  }

  @media (pointer: coarse) {
    &:active {
      color: variables.$main-background;
      border-color: variables.$main-background;
  
      &::before, &::after {
        width: 100%;
      }
  
      &::before {
        background: variables.$main-background;
        transition: width 0.5s cubic-bezier(0.22, 0.61, 0.36, 1);  
      }
  
      &::after {
        background: transparent;
        transition: 0s;  
      }
    }
  }

  &__icon {
    flex-shrink: 0;
    display: flex;
  }

  &--expandable {
    max-width: functions.toRem(24px);
    overflow: hidden;
    justify-content: flex-end;
    transition: 300ms ease;
    transition-delay: 150ms;
    transition-property: max-width, color, background;
    will-change: max-width, color, background;

    @media (pointer: fine) {
      &:hover {
        max-width: functions.toRem(500px);
      }
    }

    @media (pointer: coarse) {
      &:active {
        max-width: functions.toRem(500px);
      }
    }
  }
}